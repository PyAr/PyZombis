# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021 Python Argentina et al.
# This file is distributed under the same license as the Python para Zombis
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python para Zombis c197793c\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-25 13:47-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pt\n"
"Language-Team: pt <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../_sources/quiz/Quiz7.rst:3
msgid "Quiz - 7"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:17
msgid ""
"Desarrolle la función ``multi_cadena`` que recibe como parámetros una "
"cadena ``s`` y un entero positivo ``n`` y devuelve una nueva cadena que "
"contiene ``n`` copias de la cadena original |br| |br| Ejemplos:|br| "
"``multi_cadena(\"Hola\", 2)`` -> ``\"HolaHola\"`` |br| "
"``multi_cadena(\"Hola\", 5)`` -> ``\"HolaHolaHolaHolaHola\"``"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:59
msgid ""
"Desarrolle la función ``expandir_cadena`` que recibe una cadena ``s`` y "
"devuelva una nueva cadena siguiendo el patrón descrito en los ejemplos "
"|br| |br| Ejemplos:|br| ``expandir_cadena(\"Code\")`` -> "
"``\"CCoCodCode\"`` |br| ``expandir_cadena(\"abc\")`` -> ``\"aababc\"`` "
"|br| ``expandir_cadena(\"ab\")`` -> ``\"aab\"`` |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:103
msgid ""
"Desarrolle la función ``contar_apariciones_9`` que recibe como parámetro "
"una lista no vacía de números enteros ``numeros`` y devuelva cuántas "
"veces aparece el número 9 en la lista |br| |br| Ejemplo: "
"``contar_apariciones_9([1, 99, 9])`` -> ``1``"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:135
msgid ""
"Desarrolle la función ``verificar_comienzo_9`` que recibe una lista de "
"números enteros ``numeros`` y verifica si al menos uno de los primeros "
"cuatro números es un 9 |br| |br| Ejemplos:|br| ``verificar_comienzo_9([1,"
" 2, 9, 3, 4])`` -> ``True`` |br| ``verificar_comienzo_9([1, 2, 3, 4, "
"9])`` -> ``False`` |br| ``verificar_comienzo_9([1, 2, 3, 4, 5])`` -> "
"``False`` |br| ``verificar_comienzo_9([1, 2, 9])`` -> ``True`` |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:176
msgid ""
"Desarrolle la función ``hola_usuario`` que recibe como parámetro una "
"cadena ``nombre`` que representa el nombre de un usuario y devuelva un "
"saludo con este nombre |br| |br| Ejemplos: |br| ``hola_usuario(\"Bob\")``"
" -> ``\"¡Hola Bob!\"`` |br| ``hola_usuario(\"Alice\")`` -> ``\"¡Hola "
"Alice!\"`` |br| ``hola_usuario(\"X\")`` -> ``\"¡Hola X!\"`` |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:208
msgid ""
"Desarrolle la función ``crear_etiquetas`` que recibe dos cadenas "
"``etiqueta`` y ``palabra`` y devuelva una nueva cadena formateada "
"siguiendo el patrón de los ejemplos |br| |br| Ejemplos: |br| "
"``crear_etiquetas(\"i\", \"Yay\")`` -> ``\"<i>Yay</i>\"`` |br| "
"``crear_etiquetas(\"i\", \"Hello\")`` -> ``\"<i>Hello</i>\"`` |br| "
"``crear_etiquetas(\"cite\", \"Yay\")`` -> ``\"<cite>Yay</cite>\"`` |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:255
msgid ""
"Desarrolle la función ``repetir_letras`` que recibe una cadena ``s`` de "
"al menos dos caracteres y devuelve una nueva cadena con las dos últimas "
"letras repetidas tres veces |br| |br| Ejemplos: |br| "
"``repetir_letras(\"Hello\")`` -> ``\"lololo\"`` |br| "
"``repetir_letras(\"abb\")`` -> ``\"bbbbbb\"`` |br| "
"``repetir_letras(\"Hi\")`` -> ``\"HiHiHi\"``  |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:288
msgid ""
"Desarrolle la función ``otra_repetir_letras`` (variante de la función del"
" Ejercicio 8) que recibe una cadena ``s`` de al menos dos caracteres y un"
" entero positivo ``n`` y devuelva una nueva cadena con las dos últimas "
"letras repetidas ``n`` veces |br| |br| Ejemplos: |br| "
"``otra_repetir_letras(\"Hello\", 3)`` -> ``\"lololo\"`` |br| "
"``otra_repetir_letras(\"abb\", 1)`` -> ``\"bb\"`` |br| "
"``otra_repetir_letras(\"Hi\", 5)`` -> ``\"HiHiHiHiHi\"``  |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:321
msgid ""
"Desarrolle la función ``primera_mitad`` que recibe una cadena ``s`` y "
"devuelve la primera mitad de la cadena original |br| |br| Ejemplos:|br| "
"``primera_mitad(\"WooHoo\")`` -> ``\"Woo\"`` |br| "
"``primera_mitad(\"HelloThere\")`` -> ``\"Hello\"`` |br| "
"``primera_mitad(\"abcdef\")`` -> ``\"abc\"`` |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:356
msgid ""
"Desarrolle la función ``remover_primer_ultimo`` que recibe una cadena "
"``s`` de al menos dos caracteres y devuelva una cadena sin el primer ni "
"el último carácter |br| |br| Ejemplos: |br| "
"``remover_primer_ultimo(\"Hello\")`` -> ``\"ell\"`` |br| "
"``remover_primer_ultimo(\"python\")`` -> ``\"ytho\"`` |br| "
"``remover_primer_ultimo(\"coding\")`` -> ``\"odin\"`` |br|"
msgstr ""

#: ../_sources/quiz/Quiz7.rst:393
msgid ""
"Desarrolle la función ``rotar_izq_2`` que recibe una cadena ``s`` de al "
"menos dos caracteres y devuelva la cadena original rotada 2 posiciones a "
"la izquierda |br| |br| Ejemplos:|br| ``rotar_izq_2(\"Hello\")`` -> "
"``\"lloHe\"`` |br| ``rotar_izq_2(\"Hi\")`` -> ``\"Hi\"`` |br|"
msgstr ""

